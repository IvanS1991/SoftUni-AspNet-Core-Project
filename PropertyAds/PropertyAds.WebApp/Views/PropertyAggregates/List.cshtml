@model PropertyAggregateListQueryModel

<partial name="_PageHeadingPartial" model="@("Средни цени")" />
<partial name="_PropertyTypeDistrictFilterForm" model="@Model" />

<div class="col-10 offset-1">
    <partial name="_PropertyAggregatesListPartial" model="@Model" />

    @if (Model.TotalPages > 1)
    {
        <nav>
            <ul class="pagination pagination-sm justify-content-between">
                <li class="page-item">
                    <a class="page-link btn btn-primary @(Model.Page <= 1 ? "disabled" : "")"
                       asp-controller="PropertyAggregates"
                       asp-action="List"
                       asp-route-page="@(Model.Page - 1)"
                       asp-route-districtid="@Model.DistrictId"
                       asp-route-propertytypeid="@Model.PropertyTypeId">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only">Previous</span>
                    </a>
                </li>
                <li class="page-item">
                    <a class="page-link btn btn-primary @(Model.Page >= Model.TotalPages ? "disabled" : "")"
                       asp-controller="PropertyAggregates"
                       asp-action="List"
                       asp-route-page="@(Model.Page + 1)"
                       asp-route-districtid="@Model.DistrictId"
                       asp-route-propertytypeid="@Model.PropertyTypeId">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only">Previous</span>
                    </a>
                </li>
            </ul>
        </nav>
    }
</div>

@section Scripts {
    <script>
        $('.add-watchlist-toggle').on('click', (e) => {
            const $target = $(e.target);
            const propertyTypeId = $target.attr('data-property-type-id');
            const districtId = $target.attr('data-district-id');

            $.get(`/api/watchlists/by-segment?propertyTypeId=${propertyTypeId}&districtId=${districtId}`, (response) => {
                const $dropdown = $target.parents('.dropdown');
                const $dropdownMenu = $dropdown.find('.dropdown-menu');

                $dropdownMenu.empty();

                response.forEach(watchlist => {
                    const $dropdownItem = $('<button></button>')
                        .html(watchlist.name)
                        .addClass('dropdown-item')
                        .on('click', (clickEvt) => {
                            $.post(`/api/watchlists/add-segment?watchlistId=${watchlist.id}&propertyTypeId=${propertyTypeId}&districtId=${districtId}`);

                            $dropdownMenu.find('.dropdown-item').off('input');
                            $dropdown.find('.dropdown-menu').removeClass('show');
                        });

                    $dropdownMenu.append($dropdownItem);
                });
            });
        })
    </script>
}